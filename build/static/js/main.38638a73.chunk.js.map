{"version":3,"sources":["Menu.js","Legend.js","Api.js","Window.js","Navigation.js","Map.js","App.js","index.js"],"names":["Hamburger","menuState","toggle","id","className","onClick","Places","paintPlace","places","placesStyl","height","length","padding","olStyl","paddingTop","style","map","disp","Item","closeMenu","loaded","setLoaded","useState","fontSize","then","Menu","setMenuState","Point","color","width","r","cx","cy","fill","Line","x1","x2","y1","y2","stroke","Legend","visible","colorRiver","colorTrack","_","require","s3rsc","where","Date","getTime","_cache","_fetchJSON","which","fetch","res","ok","json","Promise","reject","_loadLayer","place","paintData","layer","styledMarker","location","marker","document","createElement","aud","img","resizePopup","el0","el1","target","_content","getElementsByClassName","x","window","innerWidth","clientWidth","Window","srcLg","srcSm","label","Location","date","Image","Sound","src","lat","loc","toFixed","lng","url","href","rel","ImageContent","alt","controls","type","to","setError","hash","curr","split","el","getElementById","cbs","onhashchange","mapboxgl","accessToken","success","fail","each","layers","resolve","paint","loadPlace","moveTo","paintMultimediaMarkers","catch","err","zoom","locations","center","pos","findWhere","flyTo","ReactDOM","render","popup","Popup","closeOnClick","offset","setDOMContent","Marker","setLngLat","setPopup","addTo","on","addEventListener","paintWindow","data","lID","addSource","kinds","addPoints","addLines","addPolys","isWaterMarker","indexOf","addLayer","drawTooltip","features","ft","textContent","properties","name","geometry","coordinates","parentNode","remove","fire","isTrack","paintTrack","paintRivers","Error","Map","mapContainerRef","useRef","setMap","setPlaces","legendVisible","setLegendVisible","error","doPaintPlace","m","Nav","useEffect","container","current","attributionControl","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserHeading","AttributionControl","compact","customAttribution","FullscreenControl","querySelector","NavigationControl","once","sortBy","ref","App","StrictMode"],"mappings":"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","file":"static/js/main.38638a73.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './Menu.scss';\n\nconst fontSz = 14;\nconst padding = 6;\nconst listPaddingTop = 18;\n\nconst Menu = ({paintPlace, places}) => {\n\n    const [menuState, setMenuState] = useState(\"loading\");\n\n    if (menuState === \"loading\" && places.length > 0) {setMenuState(\"open\");}\n\n    function toggle() {\n        if (menuState === \"open\") {setMenuState(\"closed\");} \n        else {setMenuState(\"open\");}\n    }\n\n    return (\n        <div id='menu' className={menuState}>\n            <Hamburger menuState={menuState} toggle={toggle}/>\n            <Places menuState={menuState} paintPlace={paintPlace} places={places} toggle={toggle}/>\n        </div>\n    );\n};\n\nconst Hamburger = ({menuState, toggle}) => {\n    return (\n        <div id=\"hamburger\" className={menuState} onClick={toggle}>\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    )\n};\n\nconst Places = ({menuState, paintPlace, places, toggle}) => {\n    const placesStyl = {\n        height:`${(menuState === \"open\" ? (places.length*(fontSz+padding*2)-padding*3+listPaddingTop) : 0)}px`,\n        padding: `0px ${padding}px 0px ${padding}px`\n    };\n    const olStyl = {paddingTop: `${listPaddingTop}px`};\n    return (\n        <div id=\"places\" className={menuState} style={placesStyl}>\n            <ol style={olStyl}>{places.map(({disp,id}) => \n                <div key={id}>\n                    <Item paintPlace={paintPlace} closeMenu={toggle} disp={disp} id={id}/>\n                </div>\n            )}</ol>\n        </div>\n    )\n};\n\nconst Item = ({paintPlace, closeMenu, disp, id}) => {\n    const [loaded, setLoaded] = useState(\"unloaded\");\n\n    function fetch() {\n        paintPlace(id).then(() => {\n            setLoaded(\"loaded\");\n            closeMenu();\n        });\n    }\n\n    return (\n        <li id={id} className={loaded} style={{fontSize:`${fontSz}px`}} onClick={fetch}>{disp}</li>\n    );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Legend.scss';\n\nconst Legend = ({visible, colorRiver, colorTrack}) => {\n    if (visible) {\n        return (\n            <div id=\"legend\">\n                <div className=\"item\">\n                    <div id=\"eg-aud\" className=\"eg-marker\"/>\n                    <span>sound</span>\n                </div>\n                <div className=\"item\">\n                    <div id=\"eg-img\" className=\"eg-marker\"/>\n                    <span>photo</span>\n                </div>\n                <div className=\"item\">\n                    <Point color={colorRiver}/>\n                    <span>water feature</span>\n                </div>\n                <div className=\"item\">\n                    <Point color={colorTrack}/>\n                    <span>human feature</span>\n                </div>\n                <div className=\"item\">\n                    <Point color={\"#000000\"}/>\n                    <span>other feature</span>\n                </div>\n                <div className=\"item\">\n                    <Line color={colorRiver}/>\n                    <span>river</span>\n                </div>\n                <div className=\"item\">\n                    <Line color={colorTrack}/>\n                    <span>my route</span>\n                </div>\n            </div>\n        )\n    }\n    else {\n        return <div></div>\n    }\n};\n\nconst Point = ({color}) => {\n    return (\n        <svg width=\"35px\">\n            <circle r=\"5\" cx=\"13\" cy=\"13\" fill={color}></circle>\n        </svg>\n    )\n};\n\nconst Line = ({color}) => {\n    return (\n        <svg width=\"35px\">\n            <line x1=\"0\" x2=\"25\" y1=\"13\" y2=\"13\" stroke={color}></line>\n        </svg>\n    )\n};\n\nexport default Legend;","let _ = require('underscore');\n\nconst s3rsc = where => `https://s3-us-west-2.amazonaws.com/multimap-2/gps/s3/${where}?rev=${(new Date()).getTime()}`;\n\nlet _cache = {};\n\nconst fetchPlaces = () =>\n  _fetchJSON(\"all_rivers\")\n    .then(({places}) => Promise.resolve(_.sortBy(places, \"disp\")));\n\nconst loadPlace = (place, paintData) => {\n  if (_cache[place] == null) {\n    return _fetchJSON(`${place}/info`)\n      .then(json => {\n          _cache[place] = json;\n          _.each(json.layers, _loadLayer(place, paintData));\n          return Promise.resolve({json:json, paint:true});\n      })\n  }\n  else {\n    return Promise.resolve({json:_cache[place], paint:false});\n  }\n};\n\nconst _fetchJSON = which =>\n  fetch(s3rsc(`${which}.json`))\n    .then(res => {\n      if (res.ok) {\n        return(res.json());\n      }\n      else {\n        return Promise.reject(`Unable to fetch ${which}.json`);\n      }\n    });\n\nconst _loadLayer = (place, paintData) => layer => \n  fetch(s3rsc(`${place}/geojson/${layer}`))\n    .then((res) => res.json())\n    .then(paintData(layer))\n\nexport {s3rsc, fetchPlaces, loadPlace}","import ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport {s3rsc} from './Api';\nimport 'material-icons/iconfont/material-icons.css';\nimport './Window.scss';\n\nconst paintWindow = (map, place) => location => {\n  const el = document.createElement('div');\n  ReactDOM.render(<Window place={place} location={location}/>, el);\n\n  const popup = new mapboxgl.Popup({ \n    className: 'media', \n    closeOnClick: true,\n    offset: 25 \n  }).setDOMContent(el);\n\n  new mapboxgl.Marker(styledMarker(location))\n    .setLngLat([location.loc.lng, location.loc.lat])\n    .setPopup(popup)\n    .addTo(map);\n\n  popup.on('open', resizePopup);\n  window.addEventListener('resize', resizePopup, true);\n};\n\nconst styledMarker = location => {\n  let marker = document.createElement('div');\n  if (location.aud != null) {marker.className = 'marker-aud';}\n  else if (location.img != null) {marker.className = 'marker-img';}\n  else {marker.className = 'marker-pt'}\n  return marker;\n};\n\nconst resizePopup = el0 => {\n  let el1 = el0.target._content || document.getElementsByClassName(\"mapboxgl-popup-content\")[0];\n  if (el1 != null) {\n    let x = window.innerWidth/2 - el1.clientWidth/2;\n    el1.style = `transform:translate(${x}px, 0px)`;\n  }\n};\n\nconst Window = ({place, location}) => {\n  const srcLg = location.img ? s3rsc(`${place}/imgLg/${location.img}`) : null;\n  const srcSm = location.img ? s3rsc(`${place}/imgSm/${location.img}`) : null;\n  const label = location.label || \"\";\n\n  return (\n      <div>\n        <div className=\"labels\">\n          <Location location={location}/>\n          <Date date={location.date} />\n        </div>\n        <div className=\"center\">\n          <h3>{label}</h3>\n        </div>\n        <Image srcLg={srcLg} srcSm={srcSm} label={label}/>\n        <Sound place={place} src={location.aud} />\n      </div>\n  );\n};\n\nconst Location = ({location}) => {\n  const lat = location.loc.lat.toFixed(4);\n  const lng = location.loc.lng.toFixed(4);\n  const url = `https://www.google.com/maps/search/?api=1&query=${location.loc.lat},${location.loc.lng}`;\n  return (\n    <div className=\"loc\">\n      <div className=\"icon link\"><span className=\"material-icons\">map</span><a href={url} target=\"_\">{lat},{lng}</a></div>\n      <div className=\"bordr\"></div>\n    </div>\n  )\n}\n\nconst Date = ({date}) => {\n  if (date == null) {\n    return <div></div>\n  }\n  else {\n    return (\n      <div className=\"icon\"><span className=\"material-icons\">schedule</span>{date}</div>\n    )\n  }\n}\n\nconst Image = ({srcLg, srcSm, label}) => {\n  return (\n    <div className=\"center\">\n      <a id=\"scroll\" href={srcLg} target=\"_blank\" rel=\"noreferrer\">\n        <ImageContent srcLg={srcLg} srcSm={srcSm} label={label}/>\n      </a>\n    </div>\n  )\n}\n\nconst ImageContent = ({srcLg, srcSm, label}) => {\n  if (srcSm == null || srcLg == null) {\n    return (<div></div>)\n  }\n  else {\n    return <img className=\"bordr\" src={srcSm} href={srcLg} alt={label}/>\n  }\n}\n\nconst Sound = ({place, src}) => {\n  if (src == null) {\n    return <div></div>\n  }\n  else {\n    const url = s3rsc(`${place}/aud/${src}`);\n    return (\n      <audio controls><source src={url} type=\"audio/mpeg\"/>Your browser does not support audio!</audio>\n    )\n  }\n}\n\nexport {paintWindow}","const connect = cbs => {\n    // If the url currently indicates a place, load it\n    to(cbs, window.location.hash);\n\n    window.onhashchange = () => {\n        to(cbs, window.location.hash);\n    }\n};\n\nconst to = ({paintPlace, setError}, hash) => {\n    let curr = null;\n    if (curr = hash.split(\"#\")[1]) {\n        paintPlace(curr).then(() => {\n            let el = null;\n            if (el = document.getElementById(curr)) {\n                el.className = \"loaded\";\n                setError(false);\n            }\n        })\n    }\n};\n\nconst setHash = (place) => window.location.hash = place;\n\nexport default {\n    connect: connect,\n    setHash: setHash\n}","import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './Map.scss';\nimport Menu from './Menu';\nimport Legend from './Legend';\nimport {paintWindow} from './Window'\nimport {fetchPlaces, loadPlace} from './Api';\nimport Nav from './Navigation'\nlet _ = require('underscore');\n\nmapboxgl.accessToken = \"pk.eyJ1IjoiZWRvYXJkc2Nob29uZXIiLCJhIjoiY2lxcHR0dG51MDJoZGZxbmhneTB0aW5oOSJ9.RX4c1qW-bwPCptphF_mr_A\";\n\nconst mapStyle = \"mapbox://styles/edoardschooner/cku8yh0id5za818rmtnwt7zzo\";\nconst attribution = \"© Wes Jackson 2021 ~ Love and water are never wasted; they are the efflux of our inner nature\";\n\nconst colorWaterMarker = '#2592ff';\nconst colorNonWaterMarker = '#ff2592';\nconst colorPoly = '#000000';\nconst colorRiver = '#00bcff';\nconst colorTrack = '#ff2592';\n\nconst paintPlace = (map, success, fail) => place => \n  loadPlace(place, paintData(map, place))\n    .then(({json, paint}) => {\n      moveTo(map, json);\n      if (paint) {\n        paintMultimediaMarkers(map, place, json);\n        success(place);\n      }\n    })\n    .catch((err) => fail(true))\n\nconst moveTo = (map, {zoom, locations, center}) => {\n  const pos = _.findWhere(locations, {\"label\":center}).loc;\n  map.flyTo({center:[pos.lng, pos.lat], zoom: zoom});\n};\n\n// paint custom markers for photos & audio \nconst paintMultimediaMarkers = (map, place, {locations}) => _.each(locations, paintWindow(map, place));\n\n// paint geojson data\nconst paintData = (map, place) => layer => data => {\n  const lID = `layer-${place}-${layer}`;\n  map.addSource(lID, {\n    type: 'geojson',\n    data: data\n  });\n  \n  const kinds = lID.split(\"-\");\n  addPoints(map, lID, kinds);\n  addLines(map, lID, kinds);\n  addPolys(map, lID);\n};\n\nconst addPoints = (map, layer, kinds) => {\n  const isWaterMarker = kinds.indexOf(\"cenote\") !== -1 || kinds.indexOf(\"river\") !== -1;\n  const lID = `${layer}-points`;\n  map.addLayer({\n    'id': lID,\n    'type': 'circle',\n    'source': layer,\n    'paint': {\n    'circle-radius': 6,\n    'circle-color': (isWaterMarker ? colorWaterMarker : colorNonWaterMarker)\n    },\n    'filter': ['==', '$type', 'Point']\n  });\n\n  // add tooltips on hover\n  const drawTooltip = ({ features }) => {\n    if (features.length === 0 ) return;\n    const ft = features[0];\n    const el = document.createElement('div');\n    el.textContent = ft.properties.name;\n    const popup = new mapboxgl.Popup({ offset: [0, -15] })\n      .setLngLat(ft.geometry.coordinates)\n      .setDOMContent(el)\n      .addTo(map);\n    el.parentNode.parentNode.className += ' tip';\n    map.on('closeAllPopups', () => { \n      popup.remove(); \n    });\n    const close = () => map.fire('closeAllPopups');\n    map.on('mouseleave', lID, close);\n  };\n  map.on('mousemove', lID, drawTooltip);\n  map.on('click', lID, drawTooltip);\n};\n\nconst addLines = (map, layer, kinds) => {\n  const isTrack = kinds.indexOf(\"track\") !== -1;\n  map.addLayer({\n    'id': `${layer}-lines`,\n    'type': 'line',\n    'source': layer,\n    'layout': {\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': (isTrack ? paintTrack : paintRivers),\n    'filter': ['==', '$type', 'LineString']\n  });\n};\n\nconst addPolys = (map, layer) => {\n  map.addLayer({\n    'id': `${layer}-polygons`,\n    'type': 'fill',\n    'source': layer,\n    'paint': {\n      'fill-color': colorPoly,\n      'fill-opacity': 0.2\n    },\n    'filter': ['==', '$type', 'Polygon']\n  });\n};\n\nconst paintRivers = {'line-color': colorRiver,'line-width': 2};\nconst paintTrack = {'line-color': colorTrack,'line-width': 2,'line-opacity':0.6};\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n\n  const [map, setMap] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [legendVisible, setLegendVisible] = useState(false);\n  const [error, setError] = useState(false);\n\n  const doPaintPlace = (m) => paintPlace(m, (place) => {\n    setError(false);\n    setLegendVisible(true);\n    Nav.setHash(place);\n  }, () => setError(true));\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: mapStyle,\n        attributionControl: false,\n        center: [-123.0561972, 38.9144944],\n        zoom: 5\n      })\n      .addControl(\n        new mapboxgl.GeolocateControl({\n          positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserHeading: true\n        })\n      )\n      .addControl(new mapboxgl.AttributionControl({compact: true,customAttribution: attribution}))\n      .addControl(new mapboxgl.FullscreenControl({container: document.querySelector('body')}))\n      .addControl(new mapboxgl.NavigationControl(), 'top-right')\n      .once('load', () => fetchPlaces().then((res) => {\n        setPlaces(res);\n        setMap(map);\n        Nav.connect({\n          paintPlace:doPaintPlace(map),\n          setError:setError\n        });\n      }));\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); \n\n  return (\n    <div>\n      <div id=\"my-controls\">\n        <Menu paintPlace={doPaintPlace(map)} places={places} />\n        <Legend visible={legendVisible} colorRiver={colorRiver} colorTrack={colorTrack}/>\n      </div>\n      <Error visible={error} />\n      <div className='map-container' ref={mapContainerRef} />\n    </div>\n  );\n};\n\nconst Error = ({visible}) => {\n  if (visible) {\n    return (\n      <div id=\"center-message\">\n        <div id=\"message-container\">\n          <div id=\"message\">that place does not exist</div>\n        </div>\n      </div>\n    )\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport Map from './Map';\n\nfunction App() {\n  return (\n    <div>\n      <Map />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}