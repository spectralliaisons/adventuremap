{"ast":null,"code":"var _jsxFileName = \"/Users/wesjackson/Projects/multimap-2/src/Map.js\";\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './Map.css';\nimport Tooltip from './components/Tooltip';\nimport ReactDOM from 'react-dom';\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n  const tooltipRef = useRef(new mapboxgl.Popup({\n    offset: 15\n  })); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-79.38, 43.65],\n      zoom: 12.5\n    }); // change cursor to pointer when user hovers over a clickable feature\n\n    map.on('mouseenter', e => {\n      if (e.features.length) {\n        map.getCanvas().style.cursor = 'pointer';\n      }\n    }); // reset cursor to default when user is no longer hovering over a clickable feature\n\n    map.on('mouseleave', () => {\n      map.getCanvas().style.cursor = '';\n    }); // add tooltip when users mouse move over a point\n\n    map.on('mousemove', e => {\n      const features = map.queryRenderedFeatures(e.point);\n\n      if (features.length) {\n        const feature = features[0]; // Create tooltip node\n\n        const tooltipNode = document.createElement('div');\n        ReactDOM.render( /*#__PURE__*/React.createElement(Tooltip, {\n          feature: feature,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }), tooltipNode); // Set tooltip on map\n\n        tooltipRef.current.setLngLat(e.lngLat).setDOMContent(tooltipNode).addTo(map);\n      }\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    ref: mapContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/wesjackson/Projects/multimap-2/src/Map.js"],"names":["React","useRef","useEffect","mapboxgl","Tooltip","ReactDOM","accessToken","Map","mapContainerRef","tooltipRef","Popup","offset","map","container","current","style","center","zoom","on","e","features","length","getCanvas","cursor","queryRenderedFeatures","point","feature","tooltipNode","document","createElement","render","setLngLat","lngLat","setDOMContent","addTo","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEAF,QAAQ,CAACG,WAAT,GACE,0FADF;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,eAAe,GAAGP,MAAM,CAAC,IAAD,CAA9B;AACA,QAAMQ,UAAU,GAAGR,MAAM,CAAC,IAAIE,QAAQ,CAACO,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAD,CAAzB,CAFgB,CAIhB;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,GAAG,GAAG,IAAIT,QAAQ,CAACI,GAAb,CAAiB;AAC3BM,MAAAA,SAAS,EAAEL,eAAe,CAACM,OADA;AAE3BC,MAAAA,KAAK,EAAE,oCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAAC,CAAC,KAAF,EAAS,KAAT,CAHmB;AAI3BC,MAAAA,IAAI,EAAE;AAJqB,KAAjB,CAAZ,CADc,CAQd;;AACAL,IAAAA,GAAG,CAACM,EAAJ,CAAO,YAAP,EAAqBC,CAAC,IAAI;AACxB,UAAIA,CAAC,CAACC,QAAF,CAAWC,MAAf,EAAuB;AACrBT,QAAAA,GAAG,CAACU,SAAJ,GAAgBP,KAAhB,CAAsBQ,MAAtB,GAA+B,SAA/B;AACD;AACF,KAJD,EATc,CAed;;AACAX,IAAAA,GAAG,CAACM,EAAJ,CAAO,YAAP,EAAqB,MAAM;AACzBN,MAAAA,GAAG,CAACU,SAAJ,GAAgBP,KAAhB,CAAsBQ,MAAtB,GAA+B,EAA/B;AACD,KAFD,EAhBc,CAoBd;;AACAX,IAAAA,GAAG,CAACM,EAAJ,CAAO,WAAP,EAAoBC,CAAC,IAAI;AACvB,YAAMC,QAAQ,GAAGR,GAAG,CAACY,qBAAJ,CAA0BL,CAAC,CAACM,KAA5B,CAAjB;;AACA,UAAIL,QAAQ,CAACC,MAAb,EAAqB;AACnB,cAAMK,OAAO,GAAGN,QAAQ,CAAC,CAAD,CAAxB,CADmB,CAGnB;;AACA,cAAMO,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AACAxB,QAAAA,QAAQ,CAACyB,MAAT,eAAgB,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAEJ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,EAA+CC,WAA/C,EALmB,CAOnB;;AACAlB,QAAAA,UAAU,CAACK,OAAX,CACGiB,SADH,CACaZ,CAAC,CAACa,MADf,EAEGC,aAFH,CAEiBN,WAFjB,EAGGO,KAHH,CAGStB,GAHT;AAID;AACF,KAfD,EArBc,CAsCd;;AACA,WAAO,MAAMA,GAAG,CAACuB,MAAJ,EAAb;AACD,GAxCQ,EAwCN,EAxCM,CAAT,CALgB,CA6CR;;AAER,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAE3B,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CApDD;;AAsDA,eAAeD,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './Map.css';\nimport Tooltip from './components/Tooltip';\nimport ReactDOM from 'react-dom';\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n  const tooltipRef = useRef(new mapboxgl.Popup({ offset: 15 }));\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [-79.38, 43.65],\n      zoom: 12.5\n    });\n\n    // change cursor to pointer when user hovers over a clickable feature\n    map.on('mouseenter', e => {\n      if (e.features.length) {\n        map.getCanvas().style.cursor = 'pointer';\n      }\n    });\n\n    // reset cursor to default when user is no longer hovering over a clickable feature\n    map.on('mouseleave', () => {\n      map.getCanvas().style.cursor = '';\n    });\n\n    // add tooltip when users mouse move over a point\n    map.on('mousemove', e => {\n      const features = map.queryRenderedFeatures(e.point);\n      if (features.length) {\n        const feature = features[0];\n\n        // Create tooltip node\n        const tooltipNode = document.createElement('div');\n        ReactDOM.render(<Tooltip feature={feature} />, tooltipNode);\n\n        // Set tooltip on map\n        tooltipRef.current\n          .setLngLat(e.lngLat)\n          .setDOMContent(tooltipNode)\n          .addTo(map);\n      }\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div className='map-container' ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}